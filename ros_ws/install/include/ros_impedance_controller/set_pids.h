// Generated by gencpp from file ros_impedance_controller/set_pids.msg
// DO NOT EDIT!


#ifndef ROS_IMPEDANCE_CONTROLLER_MESSAGE_SET_PIDS_H
#define ROS_IMPEDANCE_CONTROLLER_MESSAGE_SET_PIDS_H

#include <ros/service_traits.h>


#include <ros_impedance_controller/set_pidsRequest.h>
#include <ros_impedance_controller/set_pidsResponse.h>


namespace ros_impedance_controller
{

struct set_pids
{

typedef set_pidsRequest Request;
typedef set_pidsResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct set_pids
} // namespace ros_impedance_controller


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::ros_impedance_controller::set_pids > {
  static const char* value()
  {
    return "8b825b98503459e2c6dd4e723c0dcb96";
  }

  static const char* value(const ::ros_impedance_controller::set_pids&) { return value(); }
};

template<>
struct DataType< ::ros_impedance_controller::set_pids > {
  static const char* value()
  {
    return "ros_impedance_controller/set_pids";
  }

  static const char* value(const ::ros_impedance_controller::set_pids&) { return value(); }
};


// service_traits::MD5Sum< ::ros_impedance_controller::set_pidsRequest> should match
// service_traits::MD5Sum< ::ros_impedance_controller::set_pids >
template<>
struct MD5Sum< ::ros_impedance_controller::set_pidsRequest>
{
  static const char* value()
  {
    return MD5Sum< ::ros_impedance_controller::set_pids >::value();
  }
  static const char* value(const ::ros_impedance_controller::set_pidsRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::ros_impedance_controller::set_pidsRequest> should match
// service_traits::DataType< ::ros_impedance_controller::set_pids >
template<>
struct DataType< ::ros_impedance_controller::set_pidsRequest>
{
  static const char* value()
  {
    return DataType< ::ros_impedance_controller::set_pids >::value();
  }
  static const char* value(const ::ros_impedance_controller::set_pidsRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::ros_impedance_controller::set_pidsResponse> should match
// service_traits::MD5Sum< ::ros_impedance_controller::set_pids >
template<>
struct MD5Sum< ::ros_impedance_controller::set_pidsResponse>
{
  static const char* value()
  {
    return MD5Sum< ::ros_impedance_controller::set_pids >::value();
  }
  static const char* value(const ::ros_impedance_controller::set_pidsResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::ros_impedance_controller::set_pidsResponse> should match
// service_traits::DataType< ::ros_impedance_controller::set_pids >
template<>
struct DataType< ::ros_impedance_controller::set_pidsResponse>
{
  static const char* value()
  {
    return DataType< ::ros_impedance_controller::set_pids >::value();
  }
  static const char* value(const ::ros_impedance_controller::set_pidsResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // ROS_IMPEDANCE_CONTROLLER_MESSAGE_SET_PIDS_H
